---
title: "Der Umgang mit Daten"
author: "N.N."
toc: true
number-sections: true
highlight-style: pygments
execute: 
  warning: false
format:
  html:
    code-fold: false
    code-line-numbers: true
    code-annotations: hover
---

# Erste Schritte des Datamanagements

##Vektorzuordnung

```{r}
a <- c(1,2,3,4,6,-4) # <1> 
b <- c(1L,2L,3L) # <2> 
c <- c("one","two","three") # <3> 
d <- c(TRUE, FALSE, TRUE, FALSE) # <4> 
```

## Klassen von angelegten Objekten festlegen

```{r}
class(a)
class(b)
class(c)
class(d)
```

## Auswahl mit eckigen Klammern

```{r}
a[2]
```

```{r}
a[2:4]
```

## Numerischen Vektor erstellen...

```{r}
verkehrsmittel <- c(1,2,3,4,2,3,1,2,5,3,2,1,3,2,4,1)
class(verkehrsmittel)
```

...und umwandeln

```{r}
factor_verkehrsmittel <- factor(verkehrsmittel, labels=c("bus","zug","fahrrad","auto","andere"))
class(factor_verkehrsmittel)
```

```{r}
verkehrsmittel
factor_verkehrsmittel
```

## Matrix erstellen

```{r}
vec_1 <- c(1,2,3,4,5,6,7,8,9)
matrix_1 <- matrix(vec_1)
matrix_1
```

```{r}
matrix_2 <- matrix(vec_1,ncol=3)
matrix_2
```

```{r}
matrix_3 <- matrix(vec_1,nrow=3)
matrix_3
```

```{r}
matrix_4 <- matrix(vec_1,ncol=3,nrow=2)
matrix_4
```

## Dataframe erstellen

```{r}
name <- c('Esra','Mara','Adam','Luca')
alter <- c(22, 19, 18, 24)
note <- c(1.3, 2.0, 1.7, 2.0)

studierendendaten <- data.frame(name,alter,note)
```

```{r}
studierendendaten
```

# Selektion, Manipulation und Transformation von Daten

Pakete laden

```{r}
library(pacman)
p_load(haven,tidyr,dplyr)
daten <- read_dta("Datensatz/Allbus_2021.dta")
```

## Auswahl von Spalten

```{r}
vertrauen_institutionen <- daten %>% 
  select(age, pt01, pt02, pt03, pt04, pt06, pt07, pt08, pt09, pt10, pt11, pt12, pt14, pt15, pt19, pt20)
```

```{r}
View(vertrauen_institutionen)
```

```{r, include=FALSE, echo=FALSE}
options(max.print = 100) 
```

```{r}
vertrauen_institutionen$age 
```

## Filtern von Fällen

```{r}
vertrauen_institutionen_filter1 <- vertrauen_institutionen %>% 
  filter(pt01 == 7)
```

```{r}
vertrauen_institutionen_filter2 <- vertrauen_institutionen %>% 
  filter(pt01 == 7 & pt02 == 1)
```

```{r}
vertrauen_institutionen_filter3 <- vertrauen_institutionen %>% 
  filter(pt01 == 7 | pt02 == 1)
```

## Neue Spalten erstellen

```{r}
transformierte_daten <- vertrauen_institutionen %>% 
  mutate(vertrauen_gesundheitswesen = ifelse(pt01 > 4, "großes vertrauen", "wenig vertrauen"))
```

## Variablen umbenennen

```{r}
transformierte_daten <- transformierte_daten %>%
  rename(vertrauen_gesundheit = pt01)
```

## Gruppieren von Daten und Aggregation

```{r}
aggregierte_daten <- transformierte_daten %>%
  group_by(age) %>%
  summarize(durchschnitt_vertrauen = mean(vertrauen_gesundheit))
```

## Umgang mit realen Datensätzen und fehlenden Werten

```{r}
vertrauen_institutionen_dropna <- transformierte_daten %>%
  drop_na(vertrauen_gesundheit)
```

```{r}
missing_codes <- c(-9, -42, -11)

vertrauen_institutionen_dropna <- transformierte_daten %>%
  filter(!vertrauen_gesundheit %in% missing_codes)
```

```{r}
vertrauen_institutionen_dropna <- transformierte_daten %>%
  filter(across(vertrauen_gesundheit:pt20, ~ !. %in% missing_codes))
```

## Erstellung von Indizes

```{r}
vertrauen_institutionen_index <- vertrauen_institutionen_dropna %>%
  mutate(index_vertrauen = rowSums(across(vertrauen_gesundheit:pt20)))
```

```{r}
vertrauen_institutionen_index_2 <- vertrauen_institutionen_dropna %>%
  mutate(index_vertrauen = rowSums(across(vertrauen_gesundheit:pt20))/20)
```

# Eine Einführung in Grafiken und Tabellen

```{r Laden der notwendigen Pakete}
library(tidyverse)
library(naniar)
library(haven)
theme_set(theme_minimal())

daten <- read_dta("Datensatz/Allbus_2021.dta")

sample_klein <- read_rds("Datensatz/ALLBUS_sample_klein.rds")
sample_mittel <- read_rds("Datensatz/ALLBUS_sample_mittel.rds")
sample_gross <- read_rds("Datensatz/ALLBUS_sample_gross.rds")
```

```{r Datensatz anzeigen lassen}
sample_klein
```

## Einfache Häufigkeitstabelle

```{r Einfache Häufigkeitstabelle}
geschlechterverteilung <- sample_klein %>% 
  group_by(geschlecht) %>% 
  summarise(anzahl = n())
geschlechterverteilung
```

```{r Häufigkeitstabelle mit Anteilen}
geschlechterverteilung <- sample_klein %>% 
  group_by(geschlecht) %>% 
  summarise(anzahl = n()) %>% 
  mutate(anteil = anzahl/sum(anzahl))
geschlechterverteilung
```

```{r Häufigkeitstabelle mit gerundeten Prozentwerten}
geschlechterverteilung <- sample_klein %>% 
  group_by(geschlecht) %>% 
  summarise(anzahl = n()) %>% 
  mutate(anteil = anzahl/sum(anzahl),
         prozent = round(anteil * 100))
geschlechterverteilung
```

## Tabellen speichern

```{r Daten als CSV schreiben}
write_excel_csv2(geschlechterverteilung, file = "geschlechterverteilung.csv")
```

## Kreuztabellen

```{r Kreuztabelle berechnen}
bildung_und_geschlecht <- sample_klein %>% 
  group_by(bildung, geschlecht) %>% 
  summarise(anzahl = n()) %>% 
  mutate(anteil = anzahl/sum(anzahl),
         prozent = round(anteil * 100))
bildung_und_geschlecht
```

```{r Kreuztabelle umgruppieren}
geschlecht_und_bildung <- sample_klein %>% 
  group_by(geschlecht, bildung) %>% 
  summarise(anzahl = n()) %>% 
  mutate(anteil = anzahl/sum(anzahl),
         prozent = round(anteil * 100))
geschlecht_und_bildung
```

## Balkendiagramme

```{r Ein erstes Plot}
ggplot(sample_klein, aes(geschlecht)) + 
  geom_bar()
```

```{r Beschriftungen hinzufügen}
ggplot(sample_klein, aes(bildung)) + 
  geom_bar() + 
  ggtitle("Verteilung der Bildungsabschlüsse der Befragten") + 
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) + 
  xlab("") + ylab("")
```

```{r Barplot mit Farbpalette}
ggplot(sample_klein, aes(bildung, fill = bildung)) + 
  geom_bar() +
  ggtitle("Verteilung der Bildungsabschlüsse der Befragten") + 
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) + 
  xlab("") + ylab("")
```

```{r Barplot mit gradierter Farbpalette}
ggplot(sample_klein, aes(bildung, fill = bildung)) + 
  geom_bar() + coord_flip() + 
  scale_fill_brewer(palette = "Set1") +  
  ggtitle("Verteilung der Bildungsabschlüsse der Befragten") + 
  xlab("") + ylab("")
```

```{r Barplot mit weiteren Anpassungen und Beschriftung}
ggplot(sample_klein, aes(as_factor(fernsehkonsum))) + 
  geom_bar() +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) + 
  ggtitle("Fernsehkonsum pro Woche in Tagen") + 
  xlab("Fernsehkonsum pro Woche in Tagen") + ylab("Anzahl der Respondenten")
```

## Histogramme

```{r Ein einfaches Histogramm}
ggplot(sample_mittel, aes(alter)) + 
  geom_histogram()
```

```{r Histogramm mit angepassten Bins}
ggplot(sample_mittel, aes(alter)) + 
  geom_histogram(bins = 40) + 
  ggtitle("Altersverteilung der Respondenten") + 
  xlab("Alter") + ylab("Anzahl der Respondenten")
```

```{r Histogramm mit Gruppierung und Farbe nach Geschlecht}
ggplot(sample_gross, aes(vertrauen_polizei, fill = geschlecht)) + 
  geom_histogram(binwidth = 1, position = "dodge") + 
  ggtitle("Vertrauen in die Polizei nach Geschlecht") + 
  xlab("Vetrauen (1-7)") + ylab("Anzahl der Respondenten") + labs(fill = "Geschlecht") 
```

## Dichte-Plots

```{r Dichte-Diagramm}
polizei <- sample_gross %>% select(vertrauen_polizei, geschlecht) %>% filter(!is.na(geschlecht))
ggplot(polizei, aes(vertrauen_polizei, fill = geschlecht)) + 
  geom_density(alpha = 0.5) + 
  ggtitle("Vertrauen in die Polizei nach Geschlecht") + 
  xlab("Vetrauen (1-7)") + ylab("Anteil der Respondenten") + labs(fill = "Geschlecht") 
```

## Liniendiagramme

```{r Ein Liniendiagramm}
vertrauen_nach_partei <- sample_gross %>% 
  rename(Partei = wahlabsicht_partei) %>% 
  group_by(Partei) %>% 
  summarise(Vertrauenswürdigkeit = mean(vertrauen_zeitungswesen, na.rm = T))

ggplot(vertrauen_nach_partei, aes(Partei, Vertrauenswürdigkeit, group = 1)) + 
  geom_line() + geom_point(size = 3) + 
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +
  ggtitle("Vertrauen in die Presse nach Partei")
```

```{r Linien- und Punktediagramm sortiert}
vertrauen_nach_partei_sortiert <- vertrauen_nach_partei %>% 
  arrange(desc(Vertrauenswürdigkeit)) %>% 
  mutate(Rang = row_number())

ggplot(vertrauen_nach_partei_sortiert, aes(reorder(Partei, Rang), Vertrauenswürdigkeit, group = 1)) + 
  geom_line() + geom_point(size = 3) + 
  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1)) +
  ggtitle("Verrauen in die Presse nach Partei") + xlab("")
```

## Streudiagramme

```{r Datenauswahl zum Einkommen treffen}
einkommen <- daten %>% 
  select(age, sex, educ, di01a) %>% 
  rename(alter = age,
         geschlecht = sex,
         bildung = educ,
         einkommen = di01a) %>% 
  replace_with_na_all(condition = ~.x < 0) %>% 
  mutate(geschlecht = as_factor(geschlecht),
         bildung = as_factor(bildung)) %>% 
  drop_na() %>% 
  slice_sample(n = 80)
einkommen
```

```{r Ein einfaches Streudiagramm}
ggplot(einkommen, aes(alter, einkommen)) +
  geom_point()
```

```{r Ein weiteres Beispiel für ein Streudiagramm}
ggplot(einkommen, aes(alter, einkommen)) +
  geom_jitter(width = .5, size = 2) +
  geom_smooth(method = 'lm', formula = 'y ~ x') + 
  ggtitle("Zusammenhang zwischen Alter und Nettoeinkommen") + 
  xlab("Alter") + ylab("Nettoeinkommen in Euro")
```

```{r Streudiagramm mit vier Farben und zwei Formen}
ggplot(einkommen, aes(alter, einkommen, color = bildung, shape = geschlecht)) +
  geom_jitter(width = .5, height = .5, size = 2) +
  #geom_smooth(method = 'lm', formula = 'y ~ x', se = FALSE) + 
  ggtitle("Zusammenhang zwischen Alter und Nettoeinkommen ") + 
  xlab("Alter") + ylab("Nettoeinkommen") + 
  labs(color = "Bildungsabschluss") + labs(shape = "Geschlecht")
```

## Facettierte Plots

```{r}
social_media <- sample_gross %>% 
  mutate(altersgruppe = cut(alter, 
                           breaks = c(0, 24, 34, 44, 54, 64, Inf),
                           labels = c("18-24", "25-34", "35-44", "45-54", "55-64", "65+")),
         zufriedenheit_demokratie_zusammengefasst = as_factor(case_when(
           zufriedenheit_demokratie %in% c("SEHR ZUFRIEDEN", 
                                           "ZIEMLICH ZUFRIEDEN", 
                                           "ETWAS ZUFRIEDEN") ~ "eher zufrieden",
           zufriedenheit_demokratie %in% c("ETWAS UNZUFRIEDEN",
                                           "ZIEML. UNZUFRIEDEN",
                                           "SEHR UNZUFRIEDEN") ~ "eher unzufrieden"))) %>% 
  select(altersgruppe, geschlecht, zufriedenheit_demokratie_zusammengefasst, social_media_nachrichtenquelle)
```

```{r Demokratiezufriedenheit und Social Media-Nutzung als Nachrichtenquelle aggregieren}
social_media_aggregiert <- social_media %>% 
  group_by(altersgruppe, geschlecht, zufriedenheit_demokratie_zusammengefasst) %>% 
  summarise(socmedia = median(social_media_nachrichtenquelle)) %>% 
  drop_na()
```

```{r Demokratiezufriedenheit und Social Media-Nutzung nach Alter plotten}
ggplot(social_media_aggregiert, aes(altersgruppe, socmedia, fill = geschlecht)) +
  geom_bar(stat = "identity", position = "dodge") +
  facet_grid(cols = vars(zufriedenheit_demokratie_zusammengefasst)) + 
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +
  ggtitle("Demokratiezufriedenheit und Social Media-Nutzung nach Alter und Geschlecht") + 
  xlab("Alter") + ylab("Nutzung von Social Media als Nachrichtenquelle")
```

```{r}
vertrauen_summiert <- sample_gross %>% 
  rowwise() %>% 
  mutate(vertrauen_gesamt = sum(across(starts_with("vertrauen_")))) %>% 
  select(alter, geschlecht, entwicklung_kriminalitaet, vertrauen_gesamt) %>% 
  ungroup() %>% 
  drop_na()
```

```{r}
ggplot(vertrauen_summiert, aes(entwicklung_kriminalitaet, vertrauen_gesamt)) +
  geom_boxplot() + geom_jitter(alpha = 0.3) + 
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +
  ggtitle("Kriminalitätseinschätzung und Vertrauen in gesellschaftliche Institutionen") + 
  xlab("Kriminalitätseinschätzung") + ylab("Vertrauen in gesellschaftliche Institutionen")

#ggsave("Kriminalität_und_Vertrauen.pdf")
```
